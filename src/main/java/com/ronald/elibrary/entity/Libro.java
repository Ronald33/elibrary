package com.ronald.elibrary.entity;
// Generated 30/08/2015 11:06:10 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Libro generated by hbm2java
 */
@Entity
@Table(name="libro"
    ,catalog="elibrary"
)
public class Libro  implements java.io.Serializable {


     private Integer id;
     private Categoria categoria;
     private Editor editor;
     private Editorial editorial;
     private String titulo;
     private String descripcion;
     private int descargas;
     private Integer puntuacion;
     private String portada;
     private String link;
     private String tags;
     private Set<Comentario> comentarios = new HashSet<Comentario>(0);
     private Set<Autor> autors = new HashSet<Autor>(0);
     private Set<Puntuacion> puntuacions = new HashSet<Puntuacion>(0);

    public Libro() {
    }

	
    public Libro(Categoria categoria, Editor editor, Editorial editorial, String titulo, String descripcion, int descargas, String portada, String link) {
        this.categoria = categoria;
        this.editor = editor;
        this.editorial = editorial;
        this.titulo = titulo;
        this.descripcion = descripcion;
        this.descargas = descargas;
        this.portada = portada;
        this.link = link;
    }
    public Libro(Categoria categoria, Editor editor, Editorial editorial, String titulo, String descripcion, int descargas, Integer puntuacion, String portada, String link, String tags, Set<Comentario> comentarios, Set<Autor> autors, Set<Puntuacion> puntuacions) {
       this.categoria = categoria;
       this.editor = editor;
       this.editorial = editorial;
       this.titulo = titulo;
       this.descripcion = descripcion;
       this.descargas = descargas;
       this.puntuacion = puntuacion;
       this.portada = portada;
       this.link = link;
       this.tags = tags;
       this.comentarios = comentarios;
       this.autors = autors;
       this.puntuacions = puntuacions;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="categoria_id", nullable=false)
    public Categoria getCategoria() {
        return this.categoria;
    }
    
    public void setCategoria(Categoria categoria) {
        this.categoria = categoria;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="editor_id", nullable=false)
    public Editor getEditor() {
        return this.editor;
    }
    
    public void setEditor(Editor editor) {
        this.editor = editor;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="editorial_id", nullable=false)
    public Editorial getEditorial() {
        return this.editorial;
    }
    
    public void setEditorial(Editorial editorial) {
        this.editorial = editorial;
    }

    
    @Column(name="titulo", nullable=false, length=245)
    public String getTitulo() {
        return this.titulo;
    }
    
    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    
    @Column(name="descripcion", nullable=false, length=65535)
    public String getDescripcion() {
        return this.descripcion;
    }
    
    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    
    @Column(name="descargas", nullable=false)
    public int getDescargas() {
        return this.descargas;
    }
    
    public void setDescargas(int descargas) {
        this.descargas = descargas;
    }

    
    @Column(name="puntuacion")
    public Integer getPuntuacion() {
        return this.puntuacion;
    }
    
    public void setPuntuacion(Integer puntuacion) {
        this.puntuacion = puntuacion;
    }

    
    @Column(name="portada", nullable=false, length=245)
    public String getPortada() {
        return this.portada;
    }
    
    public void setPortada(String portada) {
        this.portada = portada;
    }

    
    @Column(name="link", nullable=false, length=345)
    public String getLink() {
        return this.link;
    }
    
    public void setLink(String link) {
        this.link = link;
    }

    
    @Column(name="tags", length=65535)
    public String getTags() {
        return this.tags;
    }
    
    public void setTags(String tags) {
        this.tags = tags;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="libro")
    public Set<Comentario> getComentarios() {
        return this.comentarios;
    }
    
    public void setComentarios(Set<Comentario> comentarios) {
        this.comentarios = comentarios;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="libro_autor", catalog="elibrary", joinColumns = { 
        @JoinColumn(name="libro_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="autor_id", nullable=false, updatable=false) })
    public Set<Autor> getAutors() {
        return this.autors;
    }
    
    public void setAutors(Set<Autor> autors) {
        this.autors = autors;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="libro")
    public Set<Puntuacion> getPuntuacions() {
        return this.puntuacions;
    }
    
    public void setPuntuacions(Set<Puntuacion> puntuacions) {
        this.puntuacions = puntuacions;
    }




}


